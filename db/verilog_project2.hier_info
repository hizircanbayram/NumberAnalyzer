|numberAnalyzer
isEven <= isEvenNumber:ien.port0
isFibonacci <= isFibonacci:ifn.port0
isPalindrome <= isPalindrome:ipn.port0
stuckStateEven[0] <= isEvenNumber:ien.port1
stuckStateEven[1] <= isEvenNumber:ien.port1
stuckStateFibonacci[0] <= isFibonacci:ifn.port1
stuckStateFibonacci[1] <= isFibonacci:ifn.port1
stuckStateFibonacci[2] <= isFibonacci:ifn.port1
stuckStateFibonacci[3] <= isFibonacci:ifn.port1
stuckStatePalindrome[0] <= isPalindrome:ipn.port1
stuckStatePalindrome[1] <= isPalindrome:ipn.port1
stuckStatePalindrome[2] <= isPalindrome:ipn.port1
stuckStatePalindrome[3] <= isPalindrome:ipn.port1
inp[0] => inp[0].IN3
inp[1] => inp[1].IN3
inp[2] => inp[2].IN3
inp[3] => inp[3].IN3
inp[4] => inp[4].IN3
inp[5] => inp[5].IN3
inp[6] => inp[6].IN3
inp[7] => inp[7].IN3
inp[8] => inp[8].IN3
inp[9] => inp[9].IN3
inp[10] => inp[10].IN3
inp[11] => inp[11].IN3
inp[12] => inp[12].IN3
inp[13] => inp[13].IN3
inp[14] => inp[14].IN3
inp[15] => inp[15].IN3
inp[16] => inp[16].IN3
inp[17] => inp[17].IN3
inp[18] => inp[18].IN3
inp[19] => inp[19].IN3
inp[20] => inp[20].IN3
inp[21] => inp[21].IN3
inp[22] => inp[22].IN3
inp[23] => inp[23].IN3
inp[24] => inp[24].IN3
inp[25] => inp[25].IN3
inp[26] => inp[26].IN3
inp[27] => inp[27].IN3
inp[28] => inp[28].IN3
inp[29] => inp[29].IN3
inp[30] => inp[30].IN3
inp[31] => inp[31].IN3
reset => reset.IN3
go_i => go_i.IN3
clk => clk.IN3


|numberAnalyzer|isEvenNumber:ien
result <= result$latch.DB_MAX_OUTPUT_PORT_TYPE
stuckState[0] <= stuckState.DB_MAX_OUTPUT_PORT_TYPE
stuckState[1] <= stuckState.DB_MAX_OUTPUT_PORT_TYPE
clock => currentState~1.DATAIN
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
number[0] => Selector3.IN3
number[0] => Selector2.IN2
number[1] => ~NO_FANOUT~
number[2] => ~NO_FANOUT~
number[3] => ~NO_FANOUT~
number[4] => ~NO_FANOUT~
number[5] => ~NO_FANOUT~
number[6] => ~NO_FANOUT~
number[7] => ~NO_FANOUT~
number[8] => ~NO_FANOUT~
number[9] => ~NO_FANOUT~
number[10] => ~NO_FANOUT~
number[11] => ~NO_FANOUT~
number[12] => ~NO_FANOUT~
number[13] => ~NO_FANOUT~
number[14] => ~NO_FANOUT~
number[15] => ~NO_FANOUT~
number[16] => ~NO_FANOUT~
number[17] => ~NO_FANOUT~
number[18] => ~NO_FANOUT~
number[19] => ~NO_FANOUT~
number[20] => ~NO_FANOUT~
number[21] => ~NO_FANOUT~
number[22] => ~NO_FANOUT~
number[23] => ~NO_FANOUT~
number[24] => ~NO_FANOUT~
number[25] => ~NO_FANOUT~
number[26] => ~NO_FANOUT~
number[27] => ~NO_FANOUT~
number[28] => ~NO_FANOUT~
number[29] => ~NO_FANOUT~
number[30] => ~NO_FANOUT~
number[31] => ~NO_FANOUT~


|numberAnalyzer|isFibonacci:ifn
result <= result$latch.DB_MAX_OUTPUT_PORT_TYPE
stuckState[0] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
stuckState[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
stuckState[2] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
stuckState[3] <= stuckState[3].DB_MAX_OUTPUT_PORT_TYPE
clock => currentState~1.DATAIN
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
number[0] => Equal0.IN31
number[0] => LessThan0.IN32
number[1] => Equal0.IN30
number[1] => LessThan0.IN31
number[2] => Equal0.IN29
number[2] => LessThan0.IN30
number[3] => Equal0.IN28
number[3] => LessThan0.IN29
number[4] => Equal0.IN27
number[4] => LessThan0.IN28
number[5] => Equal0.IN26
number[5] => LessThan0.IN27
number[6] => Equal0.IN25
number[6] => LessThan0.IN26
number[7] => Equal0.IN24
number[7] => LessThan0.IN25
number[8] => Equal0.IN23
number[8] => LessThan0.IN24
number[9] => Equal0.IN22
number[9] => LessThan0.IN23
number[10] => Equal0.IN21
number[10] => LessThan0.IN22
number[11] => Equal0.IN20
number[11] => LessThan0.IN21
number[12] => Equal0.IN19
number[12] => LessThan0.IN20
number[13] => Equal0.IN18
number[13] => LessThan0.IN19
number[14] => Equal0.IN17
number[14] => LessThan0.IN18
number[15] => Equal0.IN16
number[15] => LessThan0.IN17
number[16] => Equal0.IN15
number[16] => LessThan0.IN16
number[17] => Equal0.IN14
number[17] => LessThan0.IN15
number[18] => Equal0.IN13
number[18] => LessThan0.IN14
number[19] => Equal0.IN12
number[19] => LessThan0.IN13
number[20] => Equal0.IN11
number[20] => LessThan0.IN12
number[21] => Equal0.IN10
number[21] => LessThan0.IN11
number[22] => Equal0.IN9
number[22] => LessThan0.IN10
number[23] => Equal0.IN8
number[23] => LessThan0.IN9
number[24] => Equal0.IN7
number[24] => LessThan0.IN8
number[25] => Equal0.IN6
number[25] => LessThan0.IN7
number[26] => Equal0.IN5
number[26] => LessThan0.IN6
number[27] => Equal0.IN4
number[27] => LessThan0.IN5
number[28] => Equal0.IN3
number[28] => LessThan0.IN4
number[29] => Equal0.IN2
number[29] => LessThan0.IN3
number[30] => Equal0.IN1
number[30] => LessThan0.IN2
number[31] => Equal0.IN0
number[31] => LessThan0.IN1


|numberAnalyzer|isPalindrome:ipn
result <= result$latch.DB_MAX_OUTPUT_PORT_TYPE
stuckState[0] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
stuckState[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
stuckState[2] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
stuckState[3] <= stuckState.DB_MAX_OUTPUT_PORT_TYPE
clock => currentState~1.DATAIN
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
reset => currentState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => nextState.OUTPUTSELECT
go_i => Selector45.IN3
number[0] => Selector44.IN2
number[1] => Selector46.IN2
number[2] => Selector47.IN2
number[3] => Selector48.IN2
number[4] => Selector49.IN2
number[5] => Selector50.IN2
number[6] => Selector51.IN2
number[7] => Selector52.IN2
number[8] => Selector53.IN2
number[9] => Selector54.IN2
number[10] => Selector55.IN2
number[11] => Selector56.IN2
number[12] => Selector57.IN2
number[13] => Selector58.IN2
number[14] => Selector59.IN2
number[15] => Selector60.IN2
number[16] => Selector61.IN2
number[17] => Selector62.IN2
number[18] => Selector63.IN2
number[19] => Selector64.IN2
number[20] => Selector65.IN2
number[21] => Selector66.IN2
number[22] => Selector67.IN2
number[23] => Selector68.IN2
number[24] => Selector69.IN2
number[25] => Selector70.IN2
number[26] => Selector71.IN2
number[27] => Selector72.IN2
number[28] => Selector73.IN2
number[29] => Selector74.IN2
number[30] => Selector75.IN2
number[31] => Selector76.IN2


